При скачивании сэмплов из интернета высока вероятность, что они окажутся вредоносными. Наличие вредоносных файлов в безвредных сэмлах или безвредных файлов во вредоносных сэмплах выдаст отрицательный результат в текущем эксперименте. Набор тестируемых данных состоит из 25 как зловредных, так и безвредных файлов. Они использовались при проверке предложенного метода обнаружения подозрительных документов. Для поиска заранее заданного списка ключей использовался метод сканирования структуры. Эти ключи были получены из вредоносных DOCX. При сканировании были сгенерированы три файла. Они представлены на Рисунке 9.

Таблица 4 содержит результаты классификации 25 файлов.


B. Эксперименты
Эта статья описывает два эксперимента.
Первый сфокусирован на новой системе для анализа и обнаружения зловредных документов DOCX, которая использует сканирование структуры.
Второй использует сэмплы, скачанные из интереснета для тестирования эксперимента.

1) Эксперимент 1.
В этом эксперименте сканирование структуры проводилось при помощи регулярных выражений на языке программирования Python. С их помощью производился поиск подозрительных элементов, а также насколько часто они встречаются как во вредоносных документах, так и безвредных. После сканирования файлов из датасета результаты выводились в виде Таблицы 5. Процентное соотношение вычислялось делением количества зловредных файлов на общее число документов в наборе (Формула 1). В данном случае всего было 25 документов.

В результате было обнаружено, что ключевые слова Vanish и (OLE и o:lock) являются индикаторами подозрительных файлов. Эти индикаторы можно использовать при классификации документов. При подсчёте числа файлов, согласно данному предположению, следует помнить о том, как они представлены внутри документа. Любой файл DOCX может содержать оба индикатора.

а) Точность обнаружения
Прежде чем представить статистику обнаружения, следует ввести четыре величины, используемые при оценке [17].

False Positive (FP) - количество безвредных документов, классифицированных как вредоносные.
False Negative (FN) - количество вредоносных документов, классифицированных как безвредные.
True Positive (FP) - количество вредоносных документов, классифицированных как вредоносные.
True Negative (FN) - количество безвредных документов, классифицированных как безвредные.

В этом эксперименте производительность метода вычислялась с помощью следующих величин [17]:

True Positive Rate (TPR) - показатель позитивной классификации
False Positive Rate (TPR) - показатель негативной классификации
Accuracy (ACC) - точность, зависящая от числа корректных классификаций.

Используя эти формулы можно оценивать структуру XML на наличие ключевых слов Vanish и (o:OLE и o:lock). Эти характерики определяют эффективность системы и точность обнаружения. Результаты показаны в Таблице 6.

Результат подстановки значении из Таблицы 5 в выражения 2, 3 и 4 представлен на Рисунке 10.

Согласно данным в Таблице 3, три файла из трёх зловредных документов были классифицированы как подозрительные с точностью 100%. Важно отметить, что количество ложных срабатываний на безвредных файлах из безвредных документов составило 0%.

б) Оценка производительности

Для оценки алгоритма фильтрации была использована работа "OpenDocument and Open XML Security " (Lagadec P. 2008). Эта работа не дала результатов, поскольку автор рассчитывает на наличие файла oleObject.bin, который использует как маркер вредоносного файла, что показано на Рисунке 11. В этом методе происходило сканирование документа, обнаружение ключевых слов и описания, как они были встроены в документ и как в нём хранятся. В качестве результата алгоритм выдавал два значение: в случае "да", документ считается подозрительным; в случае "нет" - безвредным.
Для обнаружения файла oleObject.bin использовался поиск по структуре, что показано на Рисунке 12. С его помощью были обнаружены два подозрительных документа среди набора из 25 документов.
Автор использовал наличие файла oleObject1.bin как маркер. В нашем исследовании, как показано в Таблице 4 были помечены как подозрительные три файла из 25. Предыдущая работа обнаружила два из 25.

в) Временная оценка

Время представляет собой основной фактор при оценке скорости исследования. Для измерения времени затраченного на проверку в Python коде сохранялись моменты старта проверки и её завершения. Разница между ними является временем работы и представлена на Рисунке 13.

2) Эксперимент 2
Набор данных состоит из 57 DOCX документов, скачанных из интернета.
Сканирование структуры показало, что 0.263% документов являются подозрительными. 0.14% из них содержат встроенные элементы. Время анализа составило 1.11 с (Рисунок 14).

При поиске OLE объектов предыдущим методом результат составил два подозрительных файла из 57. Оба содержали встроенные элементы. Время анализа составило 18.86 с (Рисунок 15).



